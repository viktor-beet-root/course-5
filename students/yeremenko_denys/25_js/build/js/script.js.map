{"version":3,"file":"script.js","mappings":"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","sources":["webpack://gulp_webpack/./src/js/script.js"],"sourcesContent":["// Мінімум\r\n\r\n// Запитай у користувача його вік і визначи, ким він є: дитиною(0 - 11), підлітком(12 - 17), дорослим(18_59) або пенсіонером(60 ...), передбач можливість введення невірних даних.\r\nconst userAge = +prompt(\"Введите свой возраст\");\r\nif (userAge >= 0 && userAge <= 11) {\r\n    console.log(\"Вы ребенок\");\r\n} else if (userAge >= 12 && userAge <= 17) {\r\n    console.log(\"Вы подросток\");\r\n} else if (userAge >= 18 && userAge <= 59) {\r\n    console.log(\"ВЫ взрослый\");\r\n} else if (userAge >= 60) {\r\n    console.log(\"ВЫ персионер\");\r\n} else {\r\n    console.log(\"Неверно введены данные\");\r\n};\r\n\r\n// Запитай у користувача число від 0 до 9 і виведи йому спецсимвол, який розташований на цій клавіші (1 !, 2 @, 3 # і т. д).\r\nconst userNumber = +prompt(\"Введите число от 0 до 9\");\r\nswitch (userNumber) {\r\n    case 0:\r\n        console.log(\")\");\r\n        break;\r\n    case 1:\r\n        console.log(\"!\");\r\n        break;\r\n    case 2:\r\n        console.log(\"@\");\r\n        break;\r\n    case 3:\r\n        console.log(\"#\");\r\n        break;\r\n    case 4:\r\n        console.log(\"$\");\r\n        break;\r\n    case 5:\r\n        console.log(\"%\");\r\n        break;\r\n    case 6:\r\n        console.log(\"^\");\r\n        break;\r\n    case 7:\r\n        console.log(\"&\");\r\n        break;\r\n    case 8:\r\n        console.log(\"*\");\r\n        break;\r\n    case 9:\r\n        console.log(\"(\");\r\n        break;\r\n};\r\n\r\n\r\n// Підрахуй суму всіх чисел в заданому користувачем діапазоні.\r\nconst firstCount = +prompt('Введите первое число, я посчитаю сумму');\r\nconst secondCount = +prompt('Введите второе число, я посчитаю сумму');\r\nlet sumCount = 0;\r\nlet bigUserNumber = 0;\r\nlet smallUserNumber = 0;\r\n\r\nif (firstCount >= secondCount) {\r\n    bigUserNumber = firstCount;\r\n    smallUserNumber = secondCount;\r\n} else {\r\n    bigUserNumber = secondCount;\r\n    smallUserNumber = firstCount;\r\n};\r\n\r\nfor (let index = smallUserNumber; index <= bigUserNumber; index++) {\r\n    sumCount = sumCount + index;\r\n};\r\n\r\nconsole.log('Сумма всех чисел', sumCount);\r\n\r\n// Запитай у користувача 2 числа і знайди найбільший спільний дільник.\r\nconst firstUserCount = +prompt('Введите первое число');\r\nconst secondUserCount = +prompt('Введите второе число');\r\nlet moreUserCount;\r\nlet lessUserCount;\r\n\r\nif (firstUserCount >= secondUserCount) {\r\n    moreUserCount = firstUserCount;\r\n    lessUserCount = secondUserCount;\r\n} else {\r\n    moreUserCount = secondUserCount;\r\n    lessUserCount = firstUserCount;\r\n};\r\n\r\nlet greatestCommonDivisorUser = lessUserCount;\r\nlet i = lessUserCount;\r\n\r\nwhile (moreUserCount % i || lessUserCount % i) {\r\n    greatestCommonDivisorUser = i - 1;\r\n    i = i - 1;\r\n};\r\n\r\nconsole.log('Наибольший общий делитель: ', greatestCommonDivisorUser);\r\n\r\n// Запитай у користувача число і виведи всі дільники цього числа.\r\nconst userCount = +prompt('Введите число, я покажу его делители');\r\nconsole.log('Ваше число: ', userCount, '\\n', 'Делители вашего числа:');\r\nfor (let index = 1; index <= userCount; index++) {\r\n    if (!(userCount % index)) console.log(index)\r\n};\r\n\r\n\r\n// Норма\r\n// Запитай у користувача п’ятирозрядне число і визначи, чи є воно паліндромом.\r\nconst userFiveDigitNumber = +prompt(\"Введите 5-значное число\");\r\n\r\nconst tenThousand = userFiveDigitNumber % 10; // 1\r\nconst thousands = userFiveDigitNumber % 100 - tenThousand; // 20\r\nconst hundreds = userFiveDigitNumber % 1000 - tenThousand - thousands;//300\r\nconst tens = userFiveDigitNumber % 10000 - tenThousand - thousands - hundreds; //4000\r\nconst units = userFiveDigitNumber % 100000 - tenThousand - thousands - hundreds - tens; //50000\r\n\r\nconst newUserFiveDigitNumber = tenThousand * 10000 + thousands * 100 + hundreds + tens / 100 + units / 10000;\r\n\r\nif (userFiveDigitNumber === newUserFiveDigitNumber) {\r\n    console.log('Ваше число является полиандромом');\r\n} else {\r\n    console.log('Ваше число не является полиандромом');\r\n};\r\n\r\n// Запитай у користувача суму покупки і виведи суму до оплати зі знижкою:\r\n// від 200 до 300 - знижка буде 3%;\r\n// від 300 до 500 - 5%;\r\n// від 500 і вище - 7%.\r\n\r\nconst userPayment = +prompt('Введите сумму вашей покупки');\r\nif (userPayment < 200) {\r\n    console.log('Сумма вашего платежа равна: ', userPayment);\r\n} else if (userPayment >= 200 && userPayment <= 300) {\r\n    const userThreePercentDiscount = userPayment - (userPayment / 100 * 3);\r\n    console.log('Сумма вашего платежа равна: ', userThreePercentDiscount);\r\n} else if (userPayment > 300 && userPayment < 500) {\r\n    const userFivePercentDiscount = userPayment - (userPayment / 100 * 5);\r\n    console.log('Сумма вашего платежа равна: ', userFivePercentDiscount);\r\n} else if (userPayment >= 500) {\r\n    const userSevenPercentDiscount = userPayment - (userPayment / 100 * 7);\r\n    console.log('Сумма вашего платежа равна: ', userSevenPercentDiscount);\r\n};\r\n\r\n// Запитай у користувача 10 чисел і порахуй, скільки він ввів додатніх, від’ємних і нулів. При цьому також порахуй, скільки з них парних і непарних. Виведи статистику на екран. Враховуй, що достатньо однієї змінної (не 10) для введення чисел користувачем.\r\n// Зацикли відображення днів тижня таким чином: «День тижня. Хочеш побачити наступний день? » і так до тих пір, поки користувач натискає OK.\r\n// Максимум\r\n// Гра «Вгадай число». Запропонуй користувачеві загадати число від 0 до 100 і відгадай його наступним способом: кожну ітерацію циклу\r\n// діли діапазон чисел навпіл, записуй результат в N і питай у користувача «Ваше число> N, <N або == N?».\r\n// Залежно від того що вказав користувач, зменшуй діапазон. Початковий діапазон від 0 до 100, поділи навпіл і отримай 50.\r\n// Якщо користувач вказав, що його число> 50, то зміни діапазон на від 50 до 100. І так до тих пір, поки користувач не вибере == N\r\n//  (буде корисним почитати про алгоритм: \"бінарний пошук\").\r\n\r\n// Виведи таблицю множення для всіх чисел від 2 до 9. Кожне число необхідно помножити на числа від 1 до 10.\r\n// Запитай дату (день, місяць, рік) і виведи наступну за нею дату. Враховуй можливість переходу на наступний місяць, рік, а також високосний рік.\r\n\r\n\r\n// Елка =====================================================\r\nconst branchTree = '#';\r\nconst branchTreeNext = '\\n';\r\nconst trunkTree = ' ';\r\nconst userTreeBranchCount = +prompt('Введите размер елки');\r\n\r\n// Елка Easy\r\nlet treeEasy = '';\r\n\r\nfor (let index = 1; index <= userTreeBranchCount; index++) {\r\n    for (let j = 1; j <= index; j++) {\r\n        treeEasy += branchTree;\r\n    }\r\n    treeEasy += branchTreeNext;\r\n}\r\nconsole.log('Easy tree');\r\nconsole.log(treeEasy);\r\n\r\n// Елка Normal\r\nlet treeNormal = '';\r\n\r\nfor (let index = 1; index <= userTreeBranchCount; index++) {\r\n    for (let j = 1; j <= userTreeBranchCount - index; j++) {\r\n        treeNormal += trunkTree;\r\n    }\r\n    for (let k = 1; k <= index; k++) {\r\n        treeNormal += branchTree;\r\n\r\n    }\r\n    treeNormal += branchTreeNext;\r\n}\r\nconsole.log('Norm tree');\r\nconsole.log(treeNormal);\r\n\r\n// Елка Hard\r\nlet treeHard = '';\r\n\r\nfor (let index = 1; index <= userTreeBranchCount; index++) {\r\n    for (let j = 1; j <= userTreeBranchCount - index; j++) {\r\n        treeHard += trunkTree;\r\n    }\r\n    for (let k = 1; k <= index; k++) {\r\n        treeHard += branchTree;\r\n\r\n    }\r\n    treeHard += trunkTree;\r\n    for (let g = 1; g <= index; g++) {\r\n        treeHard += branchTree;\r\n    }\r\n    treeHard += branchTreeNext;\r\n}\r\nconsole.log('Hard tree');\r\nconsole.log(treeHard);\r\n\r\n\r\n\r\n"],"names":["userAge","prompt","console","log","userNumber","firstCount","secondCount","sumCount","bigUserNumber","smallUserNumber","index","firstUserCount","secondUserCount","moreUserCount","lessUserCount","greatestCommonDivisorUser","i","userCount","userFiveDigitNumber","tenThousand","thousands","hundreds","tens","units","newUserFiveDigitNumber","userPayment","userThreePercentDiscount","userFivePercentDiscount","userSevenPercentDiscount","branchTree","branchTreeNext","trunkTree","userTreeBranchCount","treeEasy","j","treeNormal","k","treeHard","g"],"sourceRoot":""}