@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/roboto-v30-latin-regular.woff2") format("woff2");
}

@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 500;
  src: url("./fonts/roboto-v30-latin-500.woff2") format("woff2");
}

@font-face {
  font-family: "Delius Unicase";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/delius-unicase-v26-latin-regular.woff2") format("woff2");
}

body {
  font-family: "Delius Unicase", Arial, Helvetica, sans-serif;
  background-color: #fff;
  font-size: 36px;
  margin: 0 auto;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 -15px;
}

[class*=col-] {
  padding: 15px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.col-1 {
  max-width: 8.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 8.3333333333%;
  flex-basis: 8.3333333333%;
}

.col-2 {
  max-width: 16.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 16.6666666667%;
  flex-basis: 16.6666666667%;
}

.col-3 {
  max-width: 25%;
  width: 100%;
  -ms-flex-preferred-size: 25%;
  flex-basis: 25%;
}

.col-4 {
  max-width: 33.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 33.3333333333%;
  flex-basis: 33.3333333333%;
}

.col-5 {
  max-width: 41.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 41.6666666667%;
  flex-basis: 41.6666666667%;
}

.col-6 {
  max-width: 50%;
  width: 100%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.col-7 {
  max-width: 58.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 58.3333333333%;
  flex-basis: 58.3333333333%;
}

.col-8 {
  max-width: 66.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 66.6666666667%;
  flex-basis: 66.6666666667%;
}

.col-9 {
  max-width: 75%;
  width: 100%;
  -ms-flex-preferred-size: 75%;
  flex-basis: 75%;
}

.col-10 {
  max-width: 83.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 83.3333333333%;
  flex-basis: 83.3333333333%;
}

.col-11 {
  max-width: 91.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 91.6666666667%;
  flex-basis: 91.6666666667%;
}

.col-12 {
  max-width: 100%;
  width: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.blog-article__img-icon_download,
.blog-article__img-icon_like {
  position: absolute;
  max-width: 20px;
  max-height: 20px;
  top: 20px;
  padding: 10px;
  border-radius: 8px;
  background-color: #E0E0E0;
}

.grid {
  height: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(50px, 1fr));
  grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));
  grid-template-columns: -webkit-max-content -webkit-max-content;
  grid-template-columns: max-content max-content;
  grid-template-columns: -webkit-min-content -webkit-min-content;
  grid-template-columns: min-content min-content;
  grid-template-columns: minmax(auto, 300px) 100px;
  grid-template-columns: minmax(300px, auto) 100px;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: 250px 250px;
  grid-template-rows: -webkit-min-content 1fr minmax(250px, auto);
  grid-template-rows: min-content 1fr minmax(250px, auto);
  grid-auto-rows: 100px;
  -webkit-column-gap: 50px;
  -moz-column-gap: 50px;
  column-gap: 50px;
  row-gap: 10px;
  gap: 10px 50;
  gap: 30px;
  grid-template-columns: repeat(3, 150px);
  grid-template-rows: repeat(3, 150px);
}

.grid__item {
  padding: 15px;
  background-color: lightgray;
  border: 1px solid gray;
}

.grid__item:nth-child(4) {
  grid-column: 1/span 2;
  grid-row: 2/span 2;
}

.grid__item:nth-child(3) {
  grid-row: 1/-1;
}

.page {
  padding: 15px;
  max-width: 1200px;
}

img {
  width: 100%;
  border-radius: 20px;
}

.main {
  grid-area: main;
  margin-top: 120px;
}

.blog {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 30px;
  margin-bottom: 120px;
}

.blog__title {
  grid-column: 1/-1;
  text-align: center;
  margin: 0 0 50px 0;
}

.blog__item-col2 {
  grid-column: span 2;
}

.blog__item-row2 {
  grid-row: span 2;
}

.blog-article {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  position: relative;
  border-radius: 20px;
}

.blog-article::after {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  background: -webkit-gradient(linear, left bottom, left top, from(#241F24), color-stop(34.11%, rgba(91, 91, 91, 0.45)), color-stop(62.5%, rgba(187, 186, 192, 0.26)));
  background: linear-gradient(0, #241F24 0%, rgba(91, 91, 91, 0.45) 34.11%, rgba(187, 186, 192, 0.26) 62.5%);
  border-radius: 20px;
}

.blog-article:hover::after {
  background: -webkit-gradient(linear, left bottom, left top, color-stop(1.04%, #241F24), color-stop(6.99%, rgba(91, 91, 91, 0.26)), color-stop(12.29%, rgba(187, 186, 192, 0)));
  background: linear-gradient(0, #241F24 1.04%, rgba(91, 91, 91, 0.26) 6.99%, rgba(187, 186, 192, 0) 12.29%);
}

.blog-article:hover .blog-article__img-icon {
  z-index: 1;
  opacity: 1;
  -webkit-transition: 0.3s ease-in-out;
  transition: 0.3s ease-in-out;
}

.blog-article__img-icon {
  opacity: 0;
}

.blog-article__img-icon_like {
  left: 20px;
}

.blog-article__img-icon_download {
  right: 20px;
}

.blog-article__text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: absolute;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 20px;
  position: absolute;
  bottom: 0;
  left: 0;
  width: 90%;
  font-family: "Roboto";
  font-size: 20px;
  z-index: 2;
}

.blog-article__text-name {
  color: #fff;
  font-weight: 500;
}

.blog-article__text-date {
  color: #E0E0E0;
  font-weight: 400;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
