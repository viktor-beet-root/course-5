@font-face {
  font-family: "Roboto";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/roboto-v30-latin-regular.woff2") format("woff2");
}

@font-face {
  font-family: "Roboto";
  font-style: italic;
  font-weight: 400;
  src: url("./fonts/roboto-v30-latin-regular.woff2") format("woff2");
}

@font-face {
  font-family: "Delius Unicase";
  font-style: normal;
  font-weight: 400;
  src: url("./fonts/delius-unicase-v26-latin-regular.woff2") format("woff2");
}

body {
  font-family: "Roboto", Arial, Helvetica, sans-serif;
  background-color: #fff;
  font-size: 18px;
}

.container {
  padding: 15px;
  max-width: 1170px;
  margin: 0 auto;
}

section {
  padding-top: 120px;
  padding-bottom: 100px;
}

img {
  max-width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}

.heading {
  font-family: "Delius Unicase";
  font-size: 36px;
  letter-spacing: 1.8px;
  padding-bottom: 80px;
  text-align: center;
  grid-column: 1/span 3;
}

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: 0 -15px;
}

[class*=col-] {
  padding: 15px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.col-1 {
  max-width: 8.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 8.3333333333%;
  flex-basis: 8.3333333333%;
}

.col-2 {
  max-width: 16.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 16.6666666667%;
  flex-basis: 16.6666666667%;
}

.col-3 {
  max-width: 25%;
  width: 100%;
  -ms-flex-preferred-size: 25%;
  flex-basis: 25%;
}

.col-4 {
  max-width: 33.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 33.3333333333%;
  flex-basis: 33.3333333333%;
}

.col-5 {
  max-width: 41.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 41.6666666667%;
  flex-basis: 41.6666666667%;
}

.col-6 {
  max-width: 50%;
  width: 100%;
  -ms-flex-preferred-size: 50%;
  flex-basis: 50%;
}

.col-7 {
  max-width: 58.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 58.3333333333%;
  flex-basis: 58.3333333333%;
}

.col-8 {
  max-width: 66.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 66.6666666667%;
  flex-basis: 66.6666666667%;
}

.col-9 {
  max-width: 75%;
  width: 100%;
  -ms-flex-preferred-size: 75%;
  flex-basis: 75%;
}

.col-10 {
  max-width: 83.3333333333%;
  width: 100%;
  -ms-flex-preferred-size: 83.3333333333%;
  flex-basis: 83.3333333333%;
}

.col-11 {
  max-width: 91.6666666667%;
  width: 100%;
  -ms-flex-preferred-size: 91.6666666667%;
  flex-basis: 91.6666666667%;
}

.col-12 {
  max-width: 100%;
  width: 100%;
  -ms-flex-preferred-size: 100%;
  flex-basis: 100%;
}

.grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: 1fr;
  grid-auto-rows: 370px;
  gap: 30px;
}

.img__text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  position: absolute;
  left: 15px;
  bottom: 0;
  right: 15px;
  color: #fff;
  z-index: 10;
}

.img__text .date {
  font-weight: 400;
  opacity: 0.7;
  z-index: 10;
}

.gallery {
  position: relative;
  border-radius: 20px;
  overflow: hidden;
}

.gallery::after {
  content: "";
  position: absolute;
  display: block;
  background: -webkit-gradient(linear, left bottom, left top, from(#241F24), color-stop(34.11%, rgba(91, 91, 91, 0.45)), color-stop(62.5%, rgba(187, 186, 192, 0.26)));
  background: linear-gradient(0deg, #241F24 0%, rgba(91, 91, 91, 0.45) 34.11%, rgba(187, 186, 192, 0.26) 62.5%);
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
}

.gallery:hover::after {
  background: -webkit-gradient(linear, left bottom, left top, color-stop(1.04%, #241F24), color-stop(6.99%, rgba(91, 91, 91, 0.26)), color-stop(12.29%, rgba(187, 186, 192, 0)));
  background: linear-gradient(0, #241F24 1.04%, rgba(91, 91, 91, 0.26) 6.99%, rgba(187, 186, 192, 0) 12.29%);
}

.gallery:hover .icon-wrapper {
  opacity: 1;
}

.icon-wrapper {
  position: absolute;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  top: 0;
  width: 100%;
  padding: 20px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  opacity: 0;
}

.icon-wrapper .icon {
  display: block;
  width: 40px;
  height: 40px;
  border-radius: 8px;
  background-color: #E0E0E0;
  background-position: center;
  background-repeat: no-repeat;
}

.icon-wrapper .icon_heart {
  background-image: url(../images/heart.svg);
}

.icon-wrapper .icon_download {
  background-image: url(../images/download.svg);
}

.gallery__item:nth-of-type(-2n+6) {
  grid-column: 2/span 2;
}

.gallery__item:nth-of-type(3) {
  grid-column: 1/span 2;
}

.gallery__item:nth-of-type(4) {
  grid-column: 3;
}

.gallery__image {
  width: 100%;
}

.gallery__photo {
  position: relative;
}

.gallery__photo:nth-of-type(2) {
  grid-column: 2/span 2;
}

.gallery__photo:nth-of-type(3) {
  grid-column: 1/span 2;
  grid-row: 3/span 2;
}

.gallery__photo:nth-of-type(4) {
  grid-row: 3/span 2;
}

.gallery__photo:nth-of-type(5) {
  grid-column: 1/span 2;
}

.gallery__portrait {
  position: relative;
}

.gallery__portrait:nth-of-type(2) {
  grid-column: 2;
  grid-row: 2/span 2;
}

.gallery__portrait:nth-of-type(5) {
  grid-row: 4/span 2;
}

.gallery__portrait:nth-of-type(7) {
  grid-column: 3;
  grid-row: 3/span 2;
}

.gallery__portrait:nth-of-type(8) {
  grid-column: 2/span 2;
  grid-row: 5;
}

.gallery__portrait:nth-of-type(9) {
  grid-column: 1/span 2;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
